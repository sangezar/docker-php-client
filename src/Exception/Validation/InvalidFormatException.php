<?php

declare(strict_types=1);

namespace Sangezar\DockerClient\Exception\Validation;

/**
 * Exception thrown when data format is invalid
 */
class InvalidFormatException extends ValidationException
{
    private string $dataType;
    private string $expectedFormat;
    private mixed $actualValue;

    /**
     * @param string $dataType Data type
     * @param string $expectedFormat Expected format
     * @param mixed $actualValue Actual value
     * @param string $message Additional message (automatically generated by default)
     * @param int $code Error code
     * @param \Throwable|null $previous Previous exception
     */
    public function __construct(
        string $dataType,
        string $expectedFormat,
        mixed $actualValue,
        string $message = '',
        int $code = 0,
        ?\Throwable $previous = null
    ) {
        $this->dataType = $dataType;
        $this->expectedFormat = $expectedFormat;
        $this->actualValue = $actualValue;

        if (empty($message)) {
            $message = sprintf(
                'Invalid format for %s. Expected: %s, Actual: %s',
                $dataType,
                $expectedFormat,
                is_scalar($actualValue)
                    ? var_export($actualValue, true)
                    : gettype($actualValue)
            );
        }

        parent::__construct($message, $code, $previous);
    }

    /**
     * Get the data type
     *
     * @return string
     */
    public function getDataType(): string
    {
        return $this->dataType;
    }

    /**
     * Get the expected format
     *
     * @return string
     */
    public function getExpectedFormat(): string
    {
        return $this->expectedFormat;
    }

    /**
     * Get the actual value
     *
     * @return mixed
     */
    public function getActualValue(): mixed
    {
        return $this->actualValue;
    }
}
