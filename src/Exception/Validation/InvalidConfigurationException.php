<?php

declare(strict_types=1);

namespace Sangezar\DockerClient\Exception\Validation;

/**
 * Exception thrown when object configuration is invalid
 */
class InvalidConfigurationException extends ValidationException
{
    private string $configName;
    /** @var array<int, string> */
    private array $errors;

    /**
     * @param string $configName Configuration name
     * @param array<int, string> $errors Array of configuration errors
     * @param string $message Additional message (automatically generated by default)
     * @param int $code Error code
     * @param \Throwable|null $previous Previous exception
     */
    public function __construct(
        string $configName,
        array $errors = [],
        string $message = '',
        int $code = 0,
        ?\Throwable $previous = null
    ) {
        $this->configName = $configName;
        $this->errors = $errors;

        if (empty($message)) {
            $message = sprintf('Invalid configuration for "%s"', $configName);

            if (! empty($errors)) {
                $message .= ': ' . implode('; ', $errors);
            }
        }

        parent::__construct($message, $code, $previous);
    }

    /**
     * Get configuration name
     *
     * @return string
     */
    public function getConfigName(): string
    {
        return $this->configName;
    }

    /**
     * Get list of configuration errors
     *
     * @return array<int, string>
     */
    public function getErrors(): array
    {
        return $this->errors;
    }

    /**
     * Add error to the list
     *
     * @param string $error Error description
     * @return self
     */
    public function addError(string $error): self
    {
        $this->errors[] = $error;

        return $this;
    }
}
