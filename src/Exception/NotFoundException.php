<?php

declare(strict_types=1);

namespace Sangezar\DockerClient\Exception;

/**
 * Exception thrown when a resource is not found
 */
class NotFoundException extends ApiException
{
    private string $resourceType;
    private string $resourceId;

    /**
     * @param string $resourceType Resource type (container, image, etc.)
     * @param string $resourceId Resource identifier
     * @param string $message Error message (automatically generated by default)
     * @param int $code Error code
     * @param \Throwable|null $previous Previous exception
     */
    public function __construct(
        string $resourceType,
        string $resourceId,
        string $message = '',
        int $code = 0,
        ?\Throwable $previous = null
    ) {
        $this->resourceType = $resourceType;
        $this->resourceId = $resourceId;

        if (empty($message)) {
            $message = sprintf('%s with ID "%s" not found', $resourceType, $resourceId);
        }

        parent::__construct($message, $code, $previous);
    }

    /**
     * Get the resource type
     *
     * @return string
     */
    public function getResourceType(): string
    {
        return $this->resourceType;
    }

    /**
     * Get the resource identifier
     *
     * @return string
     */
    public function getResourceId(): string
    {
        return $this->resourceId;
    }
}
